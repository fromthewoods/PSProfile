{
  "Test-Function": {
    "prefix": "test-func",
    "body": [
      "function Verb-Noun {\r",
      "  <#\r",
      "    .SYNOPSIS\r",
      "      Short description\r",
      "    .DESCRIPTION\r",
      "      Long description\r",
      "    .PARAMETER Param1\r",
      "      Specifies...\r",
      "    .EXAMPLE\r",
      "      Example here\r",
      "  #>\r",
      "  [CmdletBinding(SupportsShouldProcess=$True)]\r",
      "  [OutputType([object])]\r",
      "  Param (\r",
      "    [Parameter(Mandatory=$true,\r",
      "               ValueFromPipelineByPropertyName=$false,\r",
      "               Position=0)]\r",
      "    [string]$Param1,\r",
      "\r",
      "    [Parameter(Mandatory=$true,\r",
      "               ValueFromPipelineByPropertyName=$false,\r",
      "               Position=1)]\r",
      "    [string]$Param2\r",
      "  )\r",
      "  \r",
      "  Try {\r",
      "    Write-Verbose 'What are we doing?'\r",
      "    If ($sometest -eq $true) {\r",
      "      Write-Verbose 'Some message'\r",
      "      Return $true\r",
      "    }\r",
      "    Else {\r",
      "      Write-Verbose 'This did not work so return false.'\r",
      "      Return $false\r",
      "    }\r",
      "  }\r",
      "  Catch {\r",
      "    # Custom message here Write-Verbose\r",
      "    $message = $_.Exception.Message\r",
      "    $position = $_.InvocationInfo.PositionMessage.Split('+')[0]\r",
      "    Write-Verbose \"ERROR: $message\"\r",
      "    Write-Verbose \"ERROR: $position\"\r",
      "    Throw \"$message $position\"\r",
      "  }\r",
      "}"
    ],
    "description": "Testing Easy Snippet Maker"
  }
}